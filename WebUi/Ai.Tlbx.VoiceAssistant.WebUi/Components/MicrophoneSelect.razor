<div>
    @if (!MicPermissionGranted)
    {
        <button @onclick="RequestPermission" class="w-full py-2 px-3 rounded-md bg-blue-600 text-white text-sm font-medium hover:bg-blue-700 transition-colors" disabled="@Disabled">
            Grant Microphone Access
        </button>
    }
    else if (AvailableMicrophones.Count == 0)
    {
        <div class="text-xs text-red-600">No microphones found</div>
    }
    else
    {
        <select id="microphoneSelect" 
                class="w-full p-2 border border-gray-300 rounded-md text-sm focus:ring-1 focus:ring-blue-500 focus:border-blue-500 disabled:bg-gray-100 disabled:cursor-not-allowed"
                value="@SelectedMicrophoneId"
                @onchange="@(async (e) => await OnMicrophoneChanged(e))"
                disabled="@Disabled">
            @if (string.IsNullOrEmpty(SelectedMicrophoneId))
            {
                <option value="" disabled selected>Select a microphone</option>
            }
            @foreach (var mic in AvailableMicrophones)
            {
                <option value="@mic.Id" selected="@(mic.Id == SelectedMicrophoneId)">
                    @mic.Name @(mic.IsDefault ? "(Default)" : "")
                </option>
            }
        </select>
    }
</div>

@code {
    [Parameter] public List<MicrophoneInfo> AvailableMicrophones { get; set; } = new();
    [Parameter] public string SelectedMicrophoneId { get; set; } = string.Empty;
    [Parameter] public bool MicPermissionGranted { get; set; } = false;
    [Parameter] public EventCallback OnRequestPermission { get; set; }
    [Parameter] public EventCallback<string> SelectedMicrophoneIdChanged { get; set; }
    [Parameter] public bool Disabled { get; set; } = false;

    private async Task RequestPermission()
    {
        await OnRequestPermission.InvokeAsync();
    }
    
    private async Task OnMicrophoneChanged(ChangeEventArgs e)
    {
        SelectedMicrophoneId = e.Value?.ToString() ?? string.Empty;
        await SelectedMicrophoneIdChanged.InvokeAsync(SelectedMicrophoneId);
    }
    
    public class MicrophoneInfo
    {
        public string Id { get; set; } = string.Empty;
        public string Name { get; set; } = string.Empty;
        public bool IsDefault { get; set; } = false;
    }
} 